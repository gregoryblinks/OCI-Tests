Step 3 — Deploy the Cloud Guard Processing Function
3.1 Open Cloud Shell
In the OCI Console, click the Cloud Shell icon (bottom-left of the menu bar).

Wait until the shell loads — it’s already connected to your tenancy with the Fn CLI installed.

3.2 Set Your Application Name
Replace with the exact application name you created earlier:

bash
Kopieren
Bearbeiten
export APP_NAME=cloud-guard-processing-app
3.3 Initialize a New Python Function
bash
Kopieren
Bearbeiten
fn init --runtime python3.9 cloud_guard_processor
cd cloud_guard_processor
This creates a folder with default function files.

3.4 Replace the Default Code
Open func.py:

bash
Kopieren
Bearbeiten
nano func.py
Delete its contents, then paste this code:

python
Kopieren
Bearbeiten
import io
import json
import oci
import datetime
import os

def handler(ctx, data: io.BytesIO = None):
    try:
        # Load event data from Notification
        event = json.loads(data.getvalue())
        print("Event received:", json.dumps(event, indent=2))

        # Extract relevant fields
        finding_id = event.get("id", "unknown_finding")
        timestamp = datetime.datetime.utcnow().isoformat()

        # Prepare Object Storage client
        signer = oci.auth.signers.get_resource_principals_signer()
        object_storage = oci.object_storage.ObjectStorageClient(config={}, signer=signer)

        namespace = object_storage.get_namespace().data
        bucket_name = os.getenv("BUCKET_NAME")  # Set in function config

        # Save JSON to Object Storage
        object_name = f"{timestamp}_{finding_id}.json"
        object_storage.put_object(
            namespace,
            bucket_name,
            object_name,
            json.dumps(event, indent=2)
        )

        print(f"Saved finding {finding_id} to bucket {bucket_name} as {object_name}")

        return "Success"

    except Exception as e:
        print("Error processing event:", str(e))
        raise
Save & exit (CTRL+O, ENTER, CTRL+X).

3.5 Set Bucket Name
Make sure you’ve already created your Object Storage bucket (e.g., cloud-guard-findings-bucket).
Then set it as an environment variable for the function:

bash
Kopieren
Bearbeiten
fn config function $APP_NAME cloud_guard_processor BUCKET_NAME cloud-guard-findings-bucket
3.6 Deploy the Function
bash
Kopieren
Bearbeiten
fn -v deploy --app $APP_NAME
The -v flag gives verbose output so you can see the deployment process.

Once deployed, we’ll subscribe this function to your Notifications topic so it gets triggered every time Cloud Guard finds something.
